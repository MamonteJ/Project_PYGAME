import pygame
import sys
import os
import parameters as par
from panel import Button


class Menu:
    def __init__(self):
        def load_image(name, color_key=None):
            fullname = os.path.join('data/images', name)
            try:
                image = pygame.image.load(fullname)
            except pygame.error as message:
                print('Не удаётся загрузить:', name)
                raise SystemExit(message)
            image = image.convert_alpha()
            if color_key is not None:
                if color_key == -1:
                    color_key = image.get_at((0, 0))
                image.set_colorkey(color_key)
            return image

        self.background = load_image('background1.png')
        self.level_background = load_image('levels_background.png')
        self.button = load_image('Default.png')
        self.button_hover = load_image('Hover.png')
        self.button_mini = load_image('Default_mini.png')
        self.button_mini_hover = load_image('Hover_mini.png')
        self.sound_click = 'data/sounds/click_button.mp3'
        pygame.init()
        self.WEIGHT, self.HEIGHT = par.ROWS * par.TILE_SIZE, par.COLS * par.TILE_SIZE
        screen_size = (self.WEIGHT, self.HEIGHT + par.LOWER_PANEL)
        self.screen = pygame.display.set_mode(screen_size)
        pygame.display.set_caption('Menu Tower Defence (JD)')

    def main(self):
        start_button = Button(self.WEIGHT / 2.5 - 5, self.HEIGHT / 2, self.button,
                              True, 'Играть', self.sound_click, self.button_hover)
        exit_button = Button(self.WEIGHT / 2.5 - 5, (self.HEIGHT / 2) + 150, self.button, True,
                             'Выйти', self.sound_click, self.button_hover)
        running = True
        while running:
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    running = False
            # --- Рисуем кнопки ---
            self.screen.fill(pygame.Color('white'))
            self.screen.blit(self.background, (0, 0, self.WEIGHT, self.HEIGHT))
            pygame.draw.rect(self.screen, 'gold', (105, 95, 450, 110), border_radius=60)
            pygame.draw.rect(self.screen, 'cornsilk', (110, 100, 440, 100), border_radius=60)
            font = pygame.font.SysFont('Copyright', 80, bold=True)
            text = font.render('Tower Defense', True, '#C7A01F')
            text_rect = text.get_rect(center=(self.WEIGHT / 2 + 10, 150))
            if start_button.draw(self.screen):
                self.levels_menu()
            if exit_button.draw(self.screen):
                running = False
            self.screen.blit(text, text_rect)
            pygame.display.flip()
        pygame.quit()

    def levels_menu(self):
        level_1 = Button(self.WEIGHT / 2 - 30, 110, self.button_mini,
                         True, '1', self.sound_click, self.button_mini_hover)
        level_2 = Button(self.WEIGHT / 2 - 30, 210, self.button_mini,
                         True, '2', self.sound_click, self.button_mini_hover)
        level_3 = Button(self.WEIGHT / 2 - 30, 310, self.button_mini,
                         True, '3', self.sound_click, self.button_mini_hover)
        level_4 = Button(self.WEIGHT / 2 - 30, 410, self.button_mini,
                         True, '4', self.sound_click, self.button_mini_hover)
        level_5 = Button(self.WEIGHT / 2 - 30, 510, self.button_mini,
                         True, '5', self.sound_click, self.button_mini_hover)
        exit_button = Button(self.WEIGHT / 2.5 - 5, self.HEIGHT - 30, self.button,
                             True, 'Назад', self.sound_click, self.button_hover)
        running = True
        while running:
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    running = False
            self.screen.fill(pygame.Color('#92834E'))
            self.screen.blit(self.level_background, (0, 0, self.WEIGHT, self.HEIGHT))
            if level_1.draw(self.screen):
                lvl = 1
            level_2.draw(self.screen)
            level_3.draw(self.screen)
            level_4.draw(self.screen)
            level_5.draw(self.screen)
            if exit_button.draw(self.screen):
                self.main()
            pygame.display.flip()
        pygame.quit()
